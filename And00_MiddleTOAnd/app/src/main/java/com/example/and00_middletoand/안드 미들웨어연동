1.manifests.xml에 내용추가
    1.1:인터넷 권한 설정
           <uses-permission android:name="android.permission.INTERNET"/>
    1.2 : http프로토콜을 사용을한다.설정은 manifest에서..

            <application에서...
                    android:usesCleartextTraffic="true"

          안드로이드에서는 보안상 이유로 기본적으로http사용 막아둠.http만 사용이 가능
          -http(www)에서 정보를 주고 맏기 위한 표준(암호화x)
          -http(보안 버전,ssl,TLs암호화 표준

2.라이브러리 추가(Gradle(Module:app)
    2.1 :"Retrofit" HttpClient(요청)처리를 쉽게 가능하게 함(volley,okHttp..)
    2.2 : "Retrofit" 스칼라 컨버서 : 데이테를 닺일 String으로 양쪽이 표준을맞춤,(받을떄)
    2.3 : Gson어떤 객체, 데이터를 전부, Json으로쉽게 바꾸게 해줌( Json->객체, 데이터)

        =======================================================================

         //Retrofit Core:http요청을 쉽게하기위한 library
        implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'

        //단일행 데이터를 받기위한 컨버터:컨버터 종류중 사용법 제일 단순!
        implementation group: 'com.squareup.retrofit2', name: 'converter-scalars', version: '2.9.0'

        //String Json을객체로 변환 또는 객체를 String Json으로 변환
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
        =================================================================================




!!!!!start!!
<ApiClient>
        public class ApiClient {
            public static Retrofit getApiClient(){
                Retrofit retrofit=new Retrofit.Builder()//Retrofit.Builder로 초기화 시켜야함
                        .baseUrl("//http://192.168.0.140/mid/")//내꺼 톰캣에서 프로젝트까지(index.html또느 주소가 base)
                        .addConverterFactory(ScalarsConverterFactory.create())//String json사용이 가능해짐
                        .build();
                return retrofit;
 <ApiInterface>

 public interface ApiInterface {

     //어떤 url을 요청하고 어떤 형태로 반환을 받을껀지 파라메터등이 지정되어있는 설계도
     //ApiInterface를 통해 레트로핏 전송객체가 초기화됨
     //Retrofit 어노테이션 @get,@post
     //Form method("get" or "post")

   @FormUrlEncoded//같이 사용해야한다.@Url
     @POST
   Call<String> getData(@Url String url, @FieldMap HashMap<String, Object> params);




  이클립스에서.....
  Middle

  web.xml
  EnodingFiltter.java...
  톰캣,, 모듈에서 edit-http://xxx.... xxx설정
  AndController.java..:요청확인!
 !!!!!end!!!





3.인터페이스 추가
    public interface ApiInterface {
        @FormUrlEncoded //같이 사용 @Url
        @POST
        Call<String> getData(@Url String url , @FieldMap HashMap<String,Object> params);
    }
4.Retrofit 객체 생성
    public class ApiClient {
            Retrofit retrofit = new Retrofit.Builder() // Retrofit.Builder로 초기화 시켜야함. ( Retrofit )
                    .baseUrl("http://192.168.0.40/mid/") // 내꺼 톰캣에서 프로젝트까지.(index.html뜨는 주소가 base)
                    .addConverterFactory(ScalarsConverterFactory.create())// String json사용이 가능해짐.
                    .build();
        }

사용하기
ApiInterface apiInterface = ApiClient.getApiClient().create(ApiInterface.class);
apiInterface.getData(url부분 , 파라메터).enqueue(new Callback<String>() {@Override
                           public void onResponse(Call<String> call, Response<String> response) {//응답을 받았을때}
                           @Override
                           public void onFailure(Call<String> call, Throwable t) {//응답없음}
});
6.Gson
    객체를 String Json으로 바꾸기 . new Gson().toJson(객체);
    String Json을 객체로 바꾸기   . new Gson().fromJson(StringJson, 객체타입.class)
